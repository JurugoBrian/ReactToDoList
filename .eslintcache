[{"C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\index.js":"1","C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\App.js":"2","C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\components\\Todo.js":"3","C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\components\\Form.js":"4","C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\components\\FilterButton.js":"5"},{"size":353,"mtime":1610564122365,"results":"6","hashOfConfig":"7"},{"size":1223,"mtime":1611494648600,"results":"8","hashOfConfig":"7"},{"size":704,"mtime":1609878353212,"results":"9","hashOfConfig":"7"},{"size":859,"mtime":1611345758043,"results":"10","hashOfConfig":"7"},{"size":338,"mtime":1610997134981,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"velu6a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\index.js",[],["24","25"],"C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\App.js",["26"],"\nimport React, {useState} from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks)\n\n  function addTask(name){\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const taskList = tasks.map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      />\n    )\n  );\n\nconst tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n\n}\n\nexport default App;\n","C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\components\\Todo.js",[],"C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\components\\Form.js",[],"C:\\Users\\JurugoBrian\\Documents\\to-do-list\\src\\components\\FilterButton.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":40,"column":7,"nodeType":"33","endLine":44,"endColumn":8},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]